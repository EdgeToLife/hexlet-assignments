assert_response :success
assert_response
exit
repository
exit
response.body
response.header
response.:header
response.public_methods
response.parsed_body
response.:parsed_body
response.methods
response
post repositories_url, params: repository_params
response.body
exit
repository_data
exit
e
repository_data
exit
select_methods_starts_with(@test_instance, 'test')
select_methods_starts_with(@test_instance, 'test_should')
select_methods_starts_with(@test_instance, 'test_should_create')
@test_instance
exit
test_methods
test_methods = select_methods_starts_with(@test_instance, 'test')
test_methods = select_methods_starts_with(@test_instance, 'test_should_create')
test_methods
select_methods_starts_with(@test_instance, 'test')
select_methods_starts_with(@test_instance, 'test_')
select_methods_starts_with(@test_instance, 'test_should_create')
@test_instance.methods
@test_instance
exit
octokit_repo
octokit_repo = Octokit::Repository.from_url(repository_url)
repository_url
params[:repository][:link]
exit
post repositories_url, params: repository_params
repositories_url
post repositories_url, params: repository_params
repository_params
exit
post repositories_url, params: repository_params
exit
response.methods
response
response.body
continue
repository_data
exit
params[:repository][:link]
params[:repository]params[:repository][:link]
params[:repository]
params{:repository}
params[:link]
params :link
params
